import osimport sysimport timeimport getoptdef loop_exec(url):  # 执行 python3 start.py -u url	#print('python3 start.py -u {}'.format(url))	num = 1	try:		while (num):			print('''\033[0;37;40m- - - - - - - - - - - - - - - - - - - - - - - - - - -  操作编号：                                        										     [1] 被动收集备案信息                                   [2] 被动收集 Whois 信息                                [3] 被动收集子域名信息                                 [4] 被动收集子域名 IP 信息                             [5] 被动收集子域名 CMS 信息                            [6] 被动收集子域名 Shodan 信息 [7] 被动收集子域名漏洞信息                        [8] 退出程序                                      							     备注：第 3 步执行一次后才可执行 4、5、6 步，第 6 步执行一次后才可执行第 7 步，否则运行会出现错误提示。- - - - - - - - - - - - - - - - - - - - - - - - - - - \033[0m'''.format(url))			step = int(input("\033[1;33;40m[{}] 请输入你的操作步骤 : \033[0m".format(time.strftime('%Y-%m-%d %H:%M:%S'))))			if step == 0:				os.system("scrapy crawl pigat_dujitang -s LOG_FILE=pigat.log")			if step == 1:				os.system('scrapy crawl pigat_beian -a url={} -s LOG_FILE=pigat.log'.format(url))			if step == 2:				os.system("scrapy crawl pigat_whois -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 3:				os.system("scrapy crawl pigat_subdomain -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 4:				os.system("scrapy crawl pigat_ip -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 5:				os.system("scrapy crawl pigat_cms -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 6:				os.system("scrapy crawl pigat_shodan -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 7:				os.system("scrapy crawl pigat_cve -a url={} -s LOG_FILE=pigat.log".format(url))			if step == 8:				print('\n\033[1;31;40m[{}] 正在退出……\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))				time.sleep(0.7)				print('\033[1;31;40m[{}] 期待与你再次相见，Bye~\n\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))				num = 0	except:		print('\n\n\033[1;31;40m[{}] 正在退出……\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))		time.sleep(0.7)		print('\033[1;31;40m[{}] 期待与你再次相见，Bye~\n\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))		sys.exit()def all_run(url):  # 执行 python3 start.py -u url -a	#print('python3 start.py -u {} -a'.format(url))	url_filename = url.replace('.', '_')	output_filename = 'result'	os.system(		'scrapy crawl pigat_beian -a url={} -o ./output/{}_beian_{}.csv -s LOG_FILE=pigat.log'.format(url, url_filename,		                                                                                              output_filename))	os.system(		"scrapy crawl pigat_whois -a url={} -o ./output/{}_whois.csv -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                           output_filename))	os.system("scrapy crawl pigat_subdomain -a url={} -o ./output/{}_subdomain.csv -s LOG_FILE=pigat.log".format(url,	                                                                                                             url_filename,	                                                                                                             output_filename))	os.system(		"scrapy crawl pigat_ip -a url={} -o ./output/{}_ip.csv -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                     output_filename))	os.system(		"scrapy crawl pigat_cms -a url={} -o ./output/{}_cms.csv -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                       output_filename))	os.system(		"scrapy crawl pigat_shodan -a url={} -o ./output/{}_shodan.csv -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                             output_filename))	os.system(		"scrapy crawl pigat_cve -a url={} -o ./output/{}_cve.csv -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                       output_filename))def loop_exec_output(url, outfile):  # 执行 python3 start.py -u url -o xxx.csv	#print('python3 start.py -u {} -o {}'.format(url, outfile))	url_filename = url.replace('.', '_')	output_filename = outfile	num = 1	try:		while (num):			print('''\033[0;37;40m- - - - - - - - - - - - - - - - - - - - - - - - - - -  操作编号：                                        										     [1] 被动收集备案信息                                   [2] 被动收集 Whois 信息                                [3] 被动收集子域名信息                                 [4] 被动收集子域名 IP 信息                             [5] 被动收集子域名 CMS 信息                            [6] 被动收集子域名 Shodan 信息 [7] 被动收集子域名漏洞信息                        [8] 退出程序                                      							     备注：第 3 步执行一次后才可执行 4、5、6 步，第 6 步执行一次后才可执行第 7 步，否则运行会出现错误提示。- - - - - - - - - - - - - - - - - - - - - - - - - - - 	\033[0m'''.format(url))			step = int(input("\033[1;33;40m[{}] 请输入你的操作步骤 : \033[0m".format(time.strftime('%Y-%m-%d %H:%M:%S'))))			if step == 0:				os.system("scrapy crawl pigat_dujitang -s LOG_FILE=pigat.log")			if step == 1:				os.system(					'scrapy crawl pigat_beian -a url={} -o ./output/{}_beian_{} -s LOG_FILE=pigat.log'.format(url,					                                                                                          url_filename,					                                                                                          output_filename))			if step == 2:				os.system(					"scrapy crawl pigat_whois -a url={} -o ./output/{}_whois_{} -s LOG_FILE=pigat.log".format(url,					                                                                                          url_filename,					                                                                                          output_filename))			if step == 3:				os.system(					"scrapy crawl pigat_subdomain -a url={} -o ./output/{}_subdomain_{} -s LOG_FILE=pigat.log".format(						url,						url_filename,						output_filename))			if step == 4:				os.system(					"scrapy crawl pigat_ip -a url={} -o ./output/{}_ip_{} -s LOG_FILE=pigat.log".format(url,					                                                                                    url_filename,					                                                                                    output_filename))			if step == 5:				os.system(					"scrapy crawl pigat_cms -a url={} -o ./output/{}_cms_{} -s LOG_FILE=pigat.log".format(url,					                                                                                      url_filename,					                                                                                      output_filename))			if step == 6:				os.system(					"scrapy crawl pigat_shodan -a url={} -o ./output/{}_shodan_{} -s LOG_FILE=pigat.log".format(url,					                                                                                            url_filename,					                                                                                            output_filename))			if step == 7:				os.system(					"scrapy crawl pigat_cve -a url={} -o ./output/{}_cve_{} -s LOG_FILE=pigat.log".format(url,					                                                                                      url_filename,					                                                                                      output_filename))			if step == 8:				print('\n\033[1;31;40m[{}] 正在退出……\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))				print('\033[1;31;40m[{}] 期待与你再次相见，Bye~\n\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))				num = 0	except:		print('\n\n\033[1;31;40m[{}] 正在退出……\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))		time.sleep(0.7)		print('\033[1;31;40m[{}] 期待与你再次相见，Bye~\n\033[0m'.format(time.strftime('%Y-%m-%d %H:%M:%S')))		sys.exit()def all_run_output(url, outfile):  # 执行 python3 start.py -u url -o xxx.csv -a	#print('python3 start.py -u {} -o {} -a'.format(url, outfile))	url_filename = url.replace('.', '_')	output_filename = outfile	os.system(		'scrapy crawl pigat_beian -a url={} -o ./output/{}_beian_{} -s LOG_FILE=pigat.log'.format(url, url_filename,		                                                                                          output_filename))	os.system(		"scrapy crawl pigat_whois -a url={} -o ./output/{}_whois_{} -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                          output_filename))	os.system("scrapy crawl pigat_subdomain -a url={} -o ./output/{}_subdomain_{} -s LOG_FILE=pigat.log".format(url,	                                                                                                            url_filename,	                                                                                                            output_filename))	os.system(		"scrapy crawl pigat_ip -a url={} -o ./output/{}_ip_{} -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                    output_filename))	os.system(		"scrapy crawl pigat_cms -a url={} -o ./output/{}_cms_{} -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                      output_filename))	os.system(		"scrapy crawl pigat_shodan -a url={} -o ./output/{}_shodan_{} -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                            output_filename))	os.system(		"scrapy crawl pigat_cve -a url={} -o ./output/{}_cve_{} -s LOG_FILE=pigat.log".format(url, url_filename,		                                                                                      output_filename))def head_bule():	print('''\033[1;34;40m DODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODO DO        DODODODODODO    DODODODODODO      DODODODODODO  DODODODO            DO DO              DODODO    DODODODODO          DODODODO    DODODODO            DO DO    DODODO    DODODO    DODODODO      DODO  DODODODO        DODODODO    DODODO DO    DODODO    DODODO    DODODODO      DODO    DODODO        DODODODO    DODODO DO    DODODO    DODODO    DODODODO      DODODODODODO    DO    DODODODO    DODODO DO    DODO      DODODO    DODODODO      DODODODODODO    DO      DODODO    DODODO DO          DODODODODO    DODODODO    DO        DODO    DO      DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DODO            DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DO      DODO    DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DO      DODO    DODODO    DODODO DO    DODODODODODODODO    DODODODODO            DO  DODODODO    DODODO    DODODO DODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODO 【关于作者】	Pigat (被动信息收集聚合工具)	我的个人微信公众号：TeamsSix【快速开始】	格式：            python3 start.py -u your_url	示例：	    python3 start.py -u teamssix.com                    被动收集 teamssix.com 结果并显示	    python3 start.py -u teamssix.com -a                 直接被动收集 teamssix.com 所有结果并显示，同时默认导出 result.csv 文件	    python3 start.py -u teamssix.com -o output.csv      被动收集 teamssix.com 结果并显示，同时导出 output.csv 文件	    python3 start.py -u teamssix.com -o output.csv -a   直接被动收集 teamssix.com 所有结果并显示，同时导出 output.csv 文件	说明：        -u ：指定要被动收集的url        -o : 导出被动收集结果，支持 CSV、JSON、XML 等格式，结果将保存到 ./output 目录下        -a : 直接被动收集所有结果，没有步骤提示，并默认导出 result.csv 文件        -h : 查看帮助【注意事项】	  URL正确格式："xxx.xx"，比如 "teamssix.com"	  URL错误格式："www.teamssix.com","https://www.teamssix.com"										\033[0m''')def head_red():	print('''\033[1;31;40m DODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODO DO        DODODODODODO    DODODODODODO      DODODODODODO  DODODODO            DO DO              DODODO    DODODODODO          DODODODO    DODODODO            DO DO    DODODO    DODODO    DODODODO      DODO  DODODODO        DODODODO    DODODO DO    DODODO    DODODO    DODODODO      DODO    DODODO        DODODODO    DODODO DO    DODODO    DODODO    DODODODO      DODODODODODO    DO    DODODODO    DODODO DO    DODO      DODODO    DODODODO      DODODODODODO    DO      DODODO    DODODO DO          DODODODODO    DODODODO    DO        DODO    DO      DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DODO            DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DO      DODO    DODODO    DODODO DO    DODODODODODODODO    DODODODO    DODODO    DO      DODO    DODODO    DODODO DO    DODODODODODODODO    DODODODODO            DO  DODODODO    DODODO    DODODO DODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODODO 【关于作者】	Pigat (被动信息收集聚合工具)	我的个人微信公众号：TeamsSix【快速开始】	格式：	        python3 start.py -u your_url	示例：	    python3 start.py -u teamssix.com                    被动收集 teamssix.com 结果并显示	    python3 start.py -u teamssix.com -a                 直接被动收集 teamssix.com 所有结果并显示，同时默认导出 result.csv 文件	    python3 start.py -u teamssix.com -o output.csv      被动收集 teamssix.com 结果并显示，同时导出 output.csv 文件	    python3 start.py -u teamssix.com -o output.csv -a   直接被动收集 teamssix.com 所有结果并显示，同时导出 output.csv 文件	说明：        -u ：指定要被动收集的url        -o : 导出被动收集结果，支持 CSV、JSON、XML 等格式，结果将保存到 ./output 目录下        -a : 直接被动收集所有结果，没有步骤提示，并默认导出 result.csv 文件        -h : 查看帮助【注意事项】	  URL正确格式："xxx.xx"，比如 "teamssix.com"	  URL错误格式："www.teamssix.com","https://www.teamssix.com"					\033[0m''')def output_format(outfile):	if ('.' not in outfile) or (			outfile.split('.')[1] not in ['json', 'jsonlines', 'jl', 'csv', 'xml', 'marshal', 'pickle']):		print('\n\n\033[1;33;40m[{}] 请检查您的命令是否输入有误，以下是帮助信息：\n\033[0m'.format(			time.strftime('%Y-%m-%d %H:%M:%S')))		head_red()		sys.exit()if __name__ == '__main__':	url = '20200311000724'	all = '20200310234133'  # 判断用户是否输入 -a 参数	outfile = '20200310233702'  # 判断用户是否输入 -o 参数	# ---- 获取命令行参数 ----#	try:		opts, args = getopt.getopt(sys.argv[1:], "u:o:ah")		for opt, arg in opts:			if opt == '-h':				head_bule()				sys.exit()			elif opt in ("-u"):				url = arg			elif opt in ("-o"):				outfile = arg			elif opt in ("-a"):				all = 'OK'		# ---- 梦想开始的地方 ----#		if ('/' in url) or ('www' in url) or (url=='20200311000724'):  # 判断 url 是否输入有误			print('\n\n\033[1;33;40m[{}] 请检查您的命令是否输入有误，以下是帮助信息：\n\033[0m'.format(				time.strftime('%Y-%m-%d %H:%M:%S')))			head_red()			sys.exit()		else:			if outfile == '20200310233702':				head_bule()				if all == '20200310234133':  # 如果为真说明用户未输入 -o 与 -a 参数					loop_exec(url)  # 执行 python3 start.py -u url				elif all == 'OK':  # 如果为真说明用户输入 -a 但未输入 -o 参数					all_run(url)  # 执行 python3 start.py -u url -a			else:				output_format(outfile)				head_bule()				if all == '20200310234133':  # 如果为真说明用户输入 -o 但未输入 -a 参数					loop_exec_output(url, outfile)  # 执行 python3 start.py -u url -o xxx.csv				elif all == 'OK':  # 如果为真说明用户输入了 -o 与 -a 参数					all_run_output(url, outfile)  # 执行 python3 start.py -u url -o xxx.csv -a	except SystemExit:  # 捕获 sys.exit() 的异常		sys.exit()	except:		head_red()		sys.exit()